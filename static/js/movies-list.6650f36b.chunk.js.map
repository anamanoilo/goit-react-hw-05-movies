{"version":3,"file":"static/js/movies-list.6650f36b.chunk.js","mappings":"+NACA,EAA4B,8BAA5B,EAAkE,0B,iDC8ClE,EA1CmB,WACjB,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MACTC,GAAQC,EAAAA,EAAAA,MAARD,IAJe,wCAMvB,sGAEIE,EAAAA,EAAAA,YAAkB,GAFtB,SAG8BA,EAAAA,EAAAA,sBAH9B,gBAGYC,EAHZ,EAGYA,QACRN,EAAUM,GAJd,gDAMIC,QAAQC,MAAR,MANJ,0DANuB,sBAoBvB,OAJAC,EAAAA,EAAAA,YAAU,YAhBa,mCAiBrBC,KACC,KAGD,iCACE,eAAIC,UAAWC,EAAf,8BACA,wBACGb,EAAOc,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CACEH,UAAWC,EACXG,GAAI,CACFC,SAAS,GAAD,OAAKb,EAAL,kBAAkBW,EAAMG,IAChCC,MAAO,CAAEC,KAAMlB,IAJnB,SAOGa,EAAMM,OAASN,EAAMO,QARjBP,EAAMG,c,iHC5BzBK,IAAAA,SAAAA,QAAyB,+BAAzB,yBAEMC,EAAAA,WAAAA,SAAAA,KAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,OAAAA,eAAAA,KAAAA,EAAAA,CAAAA,UAAAA,EAAAA,MACO,0CACXC,KAAO,EAAE,KACTC,QAAU,EAAE,KACZC,YAAc,GA4Cb,OA5Ca,8EAEd,oGACyBJ,IAAAA,IAAA,+CACWK,KADX,uBACiCA,KAAKH,OAF/D,cACQI,EADR,yBAISA,EAASC,MAJlB,kGAFc,IAEd,kEAOA,oGACyBP,IAAAA,IAAA,iBACXK,KAAKF,QADM,4BACaE,KADb,QADzB,cACQC,EADR,yBAISA,EAASC,MAJlB,kGAPA,IAOA,+DAOA,oGACyBP,IAAAA,IAAA,iBACXK,KAAKF,QADM,oCACqBE,KADrB,QADzB,cACQC,EADR,yBAISA,EAASC,MAJlB,kGAPA,IAOA,kEAMA,oGACyBP,IAAAA,IAAA,iBACXK,KAAKF,QADM,oCACqBE,KADrB,QADzB,cACQC,EADR,yBAISA,EAASC,MAJlB,kGANA,IAMA,oEAOA,oGACyBP,IAAAA,IAAA,yCACKK,KADL,wBAC4BA,KAAKD,YADjC,iBAEnBC,KAAKH,KAFc,yBADzB,cACQI,EADR,yBAMSA,EAASC,MANlB,kGAPA,IAOA,2BASA,WACEF,KAAKH,MAAQ,IACd,uBAED,WACEG,KAAKH,KAAO,MACb,EAhDGD,GAkDAlB,EAAM,IAAIkB,EAEhB","sources":["webpack://react-homework-template/./src/pages/MoviesList/MoviesList.module.scss?61eb","pages/MoviesList/MoviesList.jsx","services/ApiService.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieLink\":\"MoviesList_movieLink__PzdQ-\",\"title\":\"MoviesList_title__9Nob1\"};","import s from './MoviesList.module.scss';\nimport { useState, useEffect } from 'react';\nimport api from 'services/ApiService';\nimport { Link, useLocation, useRouteMatch } from 'react-router-dom';\n\nconst MoviesList = () => {\n  const [movies, setMovies] = useState([]);\n\n  const location = useLocation();\n  const { url } = useRouteMatch();\n\n  async function loadTrendingMovies() {\n    try {\n      api.searchQuery = '';\n      const { results } = await api.fetchTrendingMovies();\n      setMovies(results);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  useEffect(() => {\n    loadTrendingMovies();\n  }, []);\n\n  return (\n    <>\n      <h1 className={s.title}>Trending movies</h1>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link\n              className={s.movieLink}\n              to={{\n                pathname: `${url}movies/${movie.id}`,\n                state: { from: location },\n              }}\n            >\n              {movie.title || movie.name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default MoviesList;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nclass ApiService {\n  #API_KEY = '53d591c4c7c46fce2d77997efee7f254';\n  page = 1;\n  movieId = 0;\n  searchQuery = '';\n\n  async fetchTrendingMovies() {\n    const response = await axios.get(\n      `/trending/movies/day?api_key=${this.#API_KEY}&page=${this.page}`\n    );\n    return response.data;\n  }\n\n  async fetchMovieDetails() {\n    const response = await axios.get(\n      `/movie/${this.movieId}?api_key=${this.#API_KEY}`\n    );\n    return response.data;\n  }\n\n  async fetchMovieCast() {\n    const response = await axios.get(\n      `/movie/${this.movieId}/credits?api_key=${this.#API_KEY}`\n    );\n    return response.data;\n  }\n  async fetchMovieReviews() {\n    const response = await axios.get(\n      `/movie/${this.movieId}/reviews?api_key=${this.#API_KEY}`\n    );\n    return response.data;\n  }\n\n  async fetchMovieByKeyword() {\n    const response = await axios.get(\n      `/search/movie/?api_key=${this.#API_KEY}&query=${this.searchQuery}&page=${\n        this.page\n      }&include_adult=false`\n    );\n    return response.data;\n  }\n\n  incrementPage() {\n    this.page += 1;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n}\nconst api = new ApiService();\n\nexport default api;\n"],"names":["useState","movies","setMovies","location","useLocation","url","useRouteMatch","api","results","console","error","useEffect","loadTrendingMovies","className","s","map","movie","to","pathname","id","state","from","title","name","axios","ApiService","page","movieId","searchQuery","this","response","data"],"sourceRoot":""}